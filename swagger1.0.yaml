swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: 1.0.0
  termsOfService: http://swagger.io/terms/
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: User Transaction current month
      description: API for showing the current month's transaction
      responses:
        '200':
          description: A list of transactions
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '401':
          description: Unauthorized – Missing, invalid, or expired token
        '403':
          description: Forbidden – Access denied
        '500':
          description: Internal Server Error
  /transactions/{id}:
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Edit description of current month
      description: Modify, update, or remove information on a transaction for the current month (no addition or deletion of transactions).
      parameters:
        - in: path
          name: id
          description: The ID of the transaction to edit
          required: true
          type: string
        - in: body
          name: body
          description: Update transaction details
          required: true
          schema:
            $ref: '#/definitions/EditDescription'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction information updated successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized – Missing, invalid, or expired token
        '403':
          description: Forbidden – Access denied
        '500':
          description: Internal Server Error
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: User Transaction details
      description: API for showing the details of a specific transaction
      parameters:
        - in: path
          name: id
          description: The ID of the transaction to edit
          required: true
          type: string
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized – Missing, invalid, or expired token
        '403':
          description: Forbidden – Access denied
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier of the transaction
        example: 1
      name:
        type: string
        description: Name of the transaction
      date:
        type: string
        format: date
        description: Transaction date in YYYY-MM-DD format
      description:
        type: string
        description: Description of the transaction
      amount:
        type: number
        format: float
        description: Amount of the transaction (two decimal places)
      balance:
        type: number
        format: float
        description: Balance of the transaction (two decimal places)
      transactionType:
        type: string
        description: Transaction type of the transaction
      category:
        type: string
        description: Category type of the transaction
      note:
        type: string
        description: Note type of the transaction
  EditDescription:
    type: object
    properties:
      category:
        type: string
        enum:
          - add
          - update
          - delete
      note:
        type: string
        enum:
          - add
          - update
          - delete
